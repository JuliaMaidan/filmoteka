{"version":3,"file":"static/js/906.3b97984d.chunk.js","mappings":"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","sources":["webpack://filmoteka/./src/components/NotFound/notFound.module.scss?65a4","components/NotFound/NotFound.jsx","webpack://filmoteka/./src/components/styled/search.module.scss?98bc","pages/Search.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"notfound\":\"notFound_notfound__kFEWF\"};","import styles from \"./notFound.module.scss\";\n\nconst NotFound = ({ text }) => {\n  return (\n    <div className={styles.notfound}>\n      <p>{text}</p>\n    </div>\n  );\n};\nexport default NotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"search_container__pes1o\",\"search\":\"search_search__mrQCm\",\"search__input\":\"search_search__input__kz-8x\",\"search__btn\":\"search_search__btn__sjknB\",\"search__svg\":\"search_search__svg__d3LIO\",\"search__error\":\"search_search__error__Ilez7\",\"title\":\"search_title__VyHXl\"};","// import Search from \"../components/Search/Search\";\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport { getSearchedMovies } from '../services/fetchMovies';\n// import { CiSearch } from 'react-icons/ci';\nimport { BsSearch } from 'react-icons/bs';\nimport NotFound from '../components/NotFound/NotFound';\nimport PostersList from '../components/PostersList/PostersList';\nimport Paginator from '../components/Paginator/Paginator';\nimport styles from '../components/styled/search.module.scss';\nimport Loader from '../components/Loader/Loader';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Search = () => {\n  const navigate = useNavigate();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n    const fetchSearchedMovies = async () => {\n      try {\n        setIsLoading(true);\n        const searchedMovies = await getSearchedMovies(query, currentPage);\n        setMovies(searchedMovies.results);\n        setTotalPages(searchedMovies.total_pages);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setSearchParams('');\n      }\n    };\n    fetchSearchedMovies();\n  }, [searchParams, setSearchParams, currentPage]);\n\n  const handleSubmit = async values => {\n    const { query } = values;\n    navigate(`/search?query=${query}`);\n    try {\n      const searchedMovies = await getSearchedMovies(query, currentPage);\n      if (searchedMovies.results.length === 0) {\n        toast(`Movie with name '${query}' doesn't exist.`);\n      }\n      setMovies(searchedMovies.results);\n      setTotalPages(searchedMovies.total_pages);\n    } catch (error) {\n      console.log(error);\n      setSearchParams('');\n    }\n  };\n\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n  };\n\n  const schema = yup.object().shape({\n    query: yup\n      .string()\n      .matches(/^[A-Za-z0-9-]+$/, 'Please, dont use symbols.')\n      .min(3)\n      .max(30)\n      .required(),\n  });\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <Toaster\n          position=\"top-right\"\n          toastOptions={{\n            className: 'toaster',\n            style: {\n              color: 'white',\n              backgroundColor: '#e38181',\n            },\n          }}\n        />\n      </div>\n      <h1 className={styles.title}>Search by name</h1>\n      <Formik\n        initialValues={{ query: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.search}>\n            <Field\n              className={styles.search__input}\n              type=\"text\"\n              name=\"query\"\n              placeholder=\"search..\"\n              // onChange={handleChange}\n            />\n            <button type=\"submit\" className={styles.search__btn}>\n              <BsSearch className={styles.search__svg} />\n            </button>\n            <ErrorMessage\n              name=\"query\"\n              component=\"div\"\n              className={styles.search__error} // Стилі для відображення помилки\n            />\n          </Form>\n        )}\n      </Formik>\n\n      <div className={styles.wrapper}>\n        {movies.length === 0 && <NotFound text=\"Search by key-word\" />}\n        {isLoading && <Loader />}\n        {movies.length > 0 && (\n          <div>\n            <PostersList movies={movies} />\n            <Paginator\n              count={totalPages}\n              currentPage={currentPage}\n              handlePageChange={handlePageChange}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"],"names":["text","className","styles","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","isLoading","setIsLoading","useEffect","query","get","fetchSearchedMovies","getSearchedMovies","searchedMovies","results","total_pages","console","log","handleSubmit","values","length","toast","schema","yup","shape","matches","min","max","required","position","toastOptions","style","color","backgroundColor","initialValues","validationSchema","onSubmit","errors","touched","type","name","placeholder","component","NotFound","Loader","PostersList","Paginator","count","handlePageChange","event","page"],"sourceRoot":""}